

"""
    buildMatrices_wos(parameters, maxrna)
    create the rate matrix, the transition matrix and the transition matrix
    for the chain without singlets.
TBW
"""
function buildMatrices_wos(parameters, maxrna)  
    (k5p,k5m,k4p,k4m,k3p,k2p,k1p,k1m,kini,delta) =  parameters
    k2m = k1m
    k3m = k1m
     nbs = 6
     Qstate = [-(k1m+k4m) k1m k4m 0 0 0;
             k1p -(k1p+k4m) 0 k4m 0 0;
             k4p 0 -(k2m+k5m +k4p) k2m k5m 0;
             0 k4p k2p -(k2p+k4p+k5m) 0 k5m;
             0 0 k5p 0 -(k3m+k5p) k3m;
             0 0 0 k5p k3p -(k3p+k5p)]
     
     
     initiationstates = [1,3,5]
     initiationrates = zeros(nbs)
     initiationrates[initiationstates] .= kini
     el = 1:1:maxrna
     ee = ones(maxrna)
     
     P1 = kron(Matrix(1I, maxrna+1, maxrna+1),Qstate )
     P2 = kron(diagm(1 =>ee),diagm(initiationrates))
     P3 = kron(diagm(-1 =>el),delta.*Matrix(1I, nbs, nbs))
     
     Q= P1 + P2 +P3
     for i in axes(Q,1)
         Q[i,i] = Q[i,i] -sum(Q[i,:])
     end
 
     P = exp(Q .* 1)
 
     stateB = [x for x in nbs+1 :(maxrna+1)*nbs]
     stateN = [x for x in 1 : nbs]
     
     
     totnbs = (maxrna+1)*nbs
     Pwos = zeros(totnbs+length(stateB),totnbs+length(stateB))
     for i in axes(P,1)
         if i in stateB
             for j in axes(P)
                 Pwos[i,j] = P[i,j]
             end
         else
             for (j,s) in enumerate(stateB)
                 Pwos[i,j+totnbs] = P[i,s]
             end
             for (j,s) in enumerate(stateN)
                 Pwos[i,s] = P[i,s]
             end
         end
     end
     for (i,s) in enumerate(stateB)
         for j in axes(Pwos)
             Pwos[i+totnbs,j] = Pwos[s,j]
         end
     end
     

    return Q, P, Pwos

end

"""
    buildMatrices_wos(parameters, maxrna)
    create ONLY the rate matrix, the transition matrix
TBW
"""
function buildMatrices(parameters, maxrna)  
    (k5p,k5m,k4p,k4m,k3p,k2p,k1p,k1m,kini,delta) =  parameters
    k2m = k1m
    k3m = k1m
     nbs = 6
     Qstate = [-(k1m+k4m) k1m k4m 0 0 0;
             k1p -(k1p+k4m) 0 k4m 0 0;
             k4p 0 -(k2m+k5m +k4p) k2m k5m 0;
             0 k4p k2p -(k2p+k4p+k5m) 0 k5m;
             0 0 k5p 0 -(k3m+k5p) k3m;
             0 0 0 k5p k3p -(k3p+k5p)]
     
     
     initiationstates = [1,3,5]
     initiationrates = zeros(nbs)
     initiationrates[initiationstates] .= kini
     el = 1:1:maxrna
     ee = ones(maxrna)
     
     P1 = kron(Matrix(1I, maxrna+1, maxrna+1),Qstate )
     P2 = kron(diagm(1 =>ee),diagm(initiationrates))
     P3 = kron(diagm(-1 =>el),delta.*Matrix(1I, nbs, nbs))
     
     Q= P1 + P2 +P3
     for i in axes(Q,1)
         Q[i,i] = Q[i,i] -sum(Q[i,:])
     end
 
     P = exp(Q .* 1)
 

    return Q, P

end



